qt(t,4)
m + s*qt(0.95,4)
m + s*qt(0.975,4)
m + c(-1,1)* s*qt(0.975,4)
m + c(-1,1)* s*qt(0.975,4)/sqrt(5)
sp <- sd(fu-bl)
s
sp
su <- sqrt(sd(bl)^2/sqrt(5) + sd(fu)^2/sqrt(5))
su
tu <- m/su
tu
2*pt(t,8)
su <- sqrt(sd(bl)^2/5 + sd(fu)^2/5
)
su <- sqrt(sd(bl)^2/5 + sd(fu)^2/5)
su
tu <- m/su
tu
2*pt(t,8)
2*pt(tu,8)
2*pt(tu,4)
2*pt(tu,8)
m + c(-1,1)*su*qt(0.975,4)
t.test(bl-fu)
t.test(fu-bl)
t.test(fu,bl)
340 / 28
m + c(-1,1)*su*qt(0.975,8)
library(ggplot2)
library(data.table)
makeplots <- function (niter,nsamp,mu,std)
{
eststd <- std*(nsamp-1)/nsamp
sdvec <- c()
muvec <- c()
mdvec <- c()
for (i in 1:niter)
{
smp <- rnorm( nsamp, mu, std )
sdsmp <- sd(smp)
musmp <- mean(smp)
mdsmp <- median(smp)
sdvec <- c( sdvec,sdsmp )
muvec <- c( muvec, musmp )
mdvec <- c( mdvec, mdsmp )
}
df <- data.frame(stdev=sdvec,mu=muvec,med=mdvec)
#Std dev
mustd <- mean(sdvec)
medstd <- median(sdvec)
sdratio <- mustd/std
mtitsd <- sprintf("Histogram of %d Std.Devs for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabsd <- sprintf("Popstd:%5.1f MeanStd:%5.1f MedStd:%5.1f Ratio:%6.4f",std,mustd,medstd,sdratio)
ggplot(df,aes(x=df$stdev))+geom_histogram(fill="pink") +
ggtitle(mtitsd) +
labs(x=xlabsd,y="Count")
#Mean
mumu <- mean(muvec)
medmu <- median(muvec)
muratio <- mumu/medmu
mtitmu <- sprintf("Histogram of %d Means for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmu <- sprintf("Popmu:%5.1f MeanMu:%5.1f MedMu:%5.1f Ratio:%6.4f",mu,mumu,medmu,muratio)
ggplot(df,aes(x=df$mu))+geom_histogram(fill="lightblue") +
ggtitle(mtitmu) +
labs(x=xlabmu,y="Count")
#Median
mumed <- mean(mdvec)
medmed <- median(mdvec)
medratio <- mumed/medmed
mtitmd <- sprintf("Histogram of %d Medians for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmd <- sprintf("Popmu:%5.1f MeanMed:%5.1f MedMed:%5.1f Ratio:%6.4f",mu,mumed,medmed,medratio)
ggplot(df,aes(x=df$med))+geom_histogram(fill="lightgreen",color="darkgreen",binwidth=1) +
ggtitle(mtitmd) +
labs(x=xlabmd,y="Count")
}
makeplots(10000,4,10,6)
library(ggplot2)
library(data.table)
makeplots <- function (niter,nsamp,mu,std)
{
eststd <- std*(nsamp-1)/nsamp
sdvec <- c()
muvec <- c()
mdvec <- c()
for (i in 1:niter)
{
smp <- rnorm( nsamp, mu, std )
sdsmp <- sd(smp)
musmp <- mean(smp)
mdsmp <- median(smp)
sdvec <- c( sdvec,sdsmp )
muvec <- c( muvec, musmp )
mdvec <- c( mdvec, mdsmp )
}
df <- data.frame(stdev=sdvec,mu=muvec,med=mdvec)
#Std dev
mustd <- mean(sdvec)
medstd <- median(sdvec)
sdratio <- mustd/std
mtitsd <- sprintf("Histogram of %d Std.Devs for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabsd <- sprintf("Popstd:%5.1f MeanStd:%5.1f MedStd:%5.1f Ratio:%6.4f",std,mustd,medstd,sdratio)
ggplot(df,aes(x=df$stdev))+geom_histogram(fill="pink") +
ggtitle(mtitsd) +
labs(x=xlabsd,y="Count")
#Mean
mumu <- mean(muvec)
medmu <- median(muvec)
muratio <- mumu/medmu
mtitmu <- sprintf("Histogram of %d Means for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmu <- sprintf("Popmu:%5.1f MeanMu:%5.1f MedMu:%5.1f Ratio:%6.4f",mu,mumu,medmu,muratio)
ggplot(df,aes(x=df$mu))+geom_histogram(fill="lightblue") +
ggtitle(mtitmu) +
labs(x=xlabmu,y="Count")
#Median
mumed <- mean(mdvec)
medmed <- median(mdvec)
medratio <- mumed/medmed
mtitmd <- sprintf("Histogram of %d Medians for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmd <- sprintf("Popmu:%5.1f MeanMed:%5.1f MedMed:%5.1f Ratio:%6.4f",mu,mumed,medmed,medratio)
# ggplot(df,aes(x=df$med))+geom_histogram(fill="lightgreen",color="darkgreen",binwidth=1) +
#    ggtitle(mtitmd) +
#    labs(x=xlabmd,y="Count")
}
makeplots(10000,4,10,6)
library(ggplot2)
library(data.table)
makeplots <- function (niter,nsamp,mu,std)
{
print(nsamp)
eststd <- std*(nsamp-1)/nsamp
sdvec <- c()
muvec <- c()
mdvec <- c()
for (i in 1:niter)
{
smp <- rnorm( nsamp, mu, std )
sdsmp <- sd(smp)
musmp <- mean(smp)
mdsmp <- median(smp)
sdvec <- c( sdvec,sdsmp )
muvec <- c( muvec, musmp )
mdvec <- c( mdvec, mdsmp )
}
df <- data.frame(stdev=sdvec,mu=muvec,med=mdvec)
#Std dev
mustd <- mean(sdvec)
medstd <- median(sdvec)
sdratio <- mustd/std
mtitsd <- sprintf("Histogram of %d Std.Devs for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabsd <- sprintf("Popstd:%5.1f MeanStd:%5.1f MedStd:%5.1f Ratio:%6.4f",std,mustd,medstd,sdratio)
ggplot(df,aes(x=df$stdev))+geom_histogram(fill="pink") +
ggtitle(mtitsd) +
labs(x=xlabsd,y="Count")
#Mean
mumu <- mean(muvec)
medmu <- median(muvec)
muratio <- mumu/medmu
mtitmu <- sprintf("Histogram of %d Means for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmu <- sprintf("Popmu:%5.1f MeanMu:%5.1f MedMu:%5.1f Ratio:%6.4f",mu,mumu,medmu,muratio)
ggplot(df,aes(x=df$mu))+geom_histogram(fill="lightblue") +
ggtitle(mtitmu) +
labs(x=xlabmu,y="Count")
#Median
mumed <- mean(mdvec)
medmed <- median(mdvec)
medratio <- mumed/medmed
mtitmd <- sprintf("Histogram of %d Medians for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmd <- sprintf("Popmu:%5.1f MeanMed:%5.1f MedMed:%5.1f Ratio:%6.4f",mu,mumed,medmed,medratio)
# ggplot(df,aes(x=df$med))+geom_histogram(fill="lightgreen",color="darkgreen",binwidth=1) +
#    ggtitle(mtitmd) +
#    labs(x=xlabmd,y="Count")
}
makeplots(10000,4,10,6)
library(ggplot2)
library(data.table)
makeplots <- function (niter,nsamp,mu,std)
{
print(nsamp)
eststd <- std*(nsamp-1)/nsamp
sdvec <- c()
muvec <- c()
mdvec <- c()
for (i in 1:niter)
{
smp <- rnorm( nsamp, mu, std )
sdsmp <- sd(smp)
musmp <- mean(smp)
mdsmp <- median(smp)
sdvec <- c( sdvec,sdsmp )
muvec <- c( muvec, musmp )
mdvec <- c( mdvec, mdsmp )
}
df <- data.frame(stdev=sdvec,mu=muvec,med=mdvec)
#Std dev
mustd <- mean(sdvec)
medstd <- median(sdvec)
sdratio <- mustd/std
mtitsd <- sprintf("Histogram of %d Std.Devs for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabsd <- sprintf("Popstd:%5.1f MeanStd:%5.1f MedStd:%5.1f Ratio:%6.4f",std,mustd,medstd,sdratio)
ggplot(df,aes(x=df$stdev))+geom_histogram(fill="pink") +
ggtitle(mtitsd) +
labs(x=xlabsd,y="Count")
#Mean
mumu <- mean(muvec)
medmu <- median(muvec)
muratio <- mumu/medmu
mtitmu <- sprintf("Histogram of %d Means for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmu <- sprintf("Popmu:%5.1f MeanMu:%5.1f MedMu:%5.1f Ratio:%6.4f",mu,mumu,medmu,muratio)
ggplot(df,aes(x=df$mu))+geom_histogram(fill="lightblue") +
ggtitle(mtitmu) +
labs(x=xlabmu,y="Count")
#Median
mumed <- mean(mdvec)
medmed <- median(mdvec)
medratio <- mumed/medmed
mtitmd <- sprintf("Histogram of %d Medians for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmd <- sprintf("Popmu:%5.1f MeanMed:%5.1f MedMed:%5.1f Ratio:%6.4f",mu,mumed,medmed,medratio)
# ggplot(df,aes(x=df$med))+geom_histogram(fill="lightgreen",color="darkgreen",binwidth=1) +
#    ggtitle(mtitmd) +
#    labs(x=xlabmd,y="Count")
}
makeplots(10000,4,10,6)
library(ggplot2)
library(data.table)
niter <- 1000
nsamp <- 4
mu <- 10
std <- 6
print(nsamp)
eststd <- std*(nsamp-1)/nsamp
sdvec <- c()
muvec <- c()
mdvec <- c()
for (i in 1:niter)
{
smp <- rnorm( nsamp, mu, std )
sdsmp <- sd(smp)
musmp <- mean(smp)
mdsmp <- median(smp)
sdvec <- c( sdvec,sdsmp )
muvec <- c( muvec, musmp )
mdvec <- c( mdvec, mdsmp )
}
df <- data.frame(stdev=sdvec,mu=muvec,med=mdvec)
#Std dev
mustd <- mean(sdvec)
medstd <- median(sdvec)
sdratio <- mustd/std
mtitsd <- sprintf("Histogram of %d Std.Devs for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabsd <- sprintf("Popstd:%5.1f MeanStd:%5.1f MedStd:%5.1f Ratio:%6.4f",std,mustd,medstd,sdratio)
ggplot(df,aes(x=df$stdev))+geom_histogram(fill="pink") +
ggtitle(mtitsd) +
labs(x=xlabsd,y="Count")
#Mean
mumu <- mean(muvec)
medmu <- median(muvec)
muratio <- mumu/medmu
mtitmu <- sprintf("Histogram of %d Means for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmu <- sprintf("Popmu:%5.1f MeanMu:%5.1f MedMu:%5.1f Ratio:%6.4f",mu,mumu,medmu,muratio)
ggplot(df,aes(x=df$mu))+geom_histogram(fill="lightblue") +
ggtitle(mtitmu) +
labs(x=xlabmu,y="Count")
#Median
mumed <- mean(mdvec)
medmed <- median(mdvec)
medratio <- mumed/medmed
mtitmd <- sprintf("Histogram of %d Medians for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabmd <- sprintf("Popmu:%5.1f MeanMed:%5.1f MedMed:%5.1f Ratio:%6.4f",mu,mumed,medmed,medratio)
# ggplot(df,aes(x=df$med))+geom_histogram(fill="lightgreen",color="darkgreen",binwidth=1) +
#    ggtitle(mtitmd) +
#    labs(x=xlabmd,y="Count")
# makeplots(10000,4,10,6)
setwd("C:/DataCert/DataProds/ShinyApp")
runApp()
library(slidify)
library(shiny
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$stdplot1 <- renderPlot({
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?hist
library(UsingR,quiet=T)
library(ggplot2,quiet=T)
ncnt <<- 0
shinyServer(
function(input, output) {
ntrn <- read.csv("ntrn.csv",as.is=T)
reqname <- renderText({input$user})
# utrn <- subset(ntrn,user_name==do.call(reqname ))
output$oid1 <- renderPrint({input$id1})
output$oid2 <- renderPrint(reqname)
#output$reqname <- reqname()
output$stdplot1 <- renderPlot({
# ncnt <- ncnt+1'
mu1 <- renderText({input$user})
plt <- ggplot(ntrn,aes(x=classe))+geom_histogram(fill=c("darkgreen","darkred","darkred","darkred","darkred")) +
ggtitle(mu1()[[1]]) +
labs(x="Grade/Class",y="Count")
ncnt <<- ncnt+1
return(plt)
})
output$stdplot <- renderPlot(
{
niter <- 1000
nsamp <- {input$nsamp}
mu <- {input$mu}
std <- {input$std}
print(sprintf("nsamp:%d",nsamp))
eststd <- std*(nsamp-1)/nsamp
sdvec <- c()
muvec <- c()
mdvec <- c()
for (i in 1:niter)
{
smp <- rnorm( nsamp, mu, std )
sdsmp <- sd(smp)
musmp <- mean(smp)
mdsmp <- median(smp)
sdvec <- c( sdvec,sdsmp )
muvec <- c( muvec, musmp )
mdvec <- c( mdvec, mdsmp )
}
df <- data.frame(stdev=sdvec,mu=muvec,med=mdvec)
print(sprintf("rows in df:%d",nrow(df)))
#Std dev
mustd <- mean(sdvec)
medstd <- median(sdvec)
sdratio <- mustd/std
mtitsd <- sprintf("Histogram of %d Std.Devs for Sample Size:%d  mu:%5.1f  std:%5.1f",niter,nsamp,mu,std)
xlabsd <- sprintf("Popstd:%5.1f MeanStd:%5.1f MedStd:%5.1f Ratio:%6.4f",std,mustd,medstd,sdratio)
# plt <- print(ggplot(df,aes(x=df$stdev))+geom_histogram(fill="pink",binwidth=1) +
#          ggtitle(mtitsd) + labs(x=xlabsd,y="Count"))
plt <- hist(df$stdev,main=mitsd,xlab=xlabsd,ylab=ylabsd,col="pink")
return(plt)
}
)
}
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?vline
?abline
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("C:/DataCert/DataProds/ShinyAppTest")
setwd("C:/DataCert/DataProds/ShinyAppTest")
runApp()
idx <- c (1,2,3)
idx
idx <- c("Pop","Mean","Med")
which(idx,"Pop")
?which
match(idx,"Pop")
max(match(idx,"pop"))
vi <- match(idx,"Pop")
vi[is.na] <- 0
is.na(v) <- 0
is.na(vi) <- 0
vi
grep(idx,"Pop")
grep(idx,"pop")
length(vi[vi=="Pop"])
length(vi[vi=="Mean"])
vi
length(idx[idx=="Mean"])
length(idx[idx=="Meana"])
length(idx[idx=="Pop"])
length(idx[idx=="pop"])
setwd("C:/DataCert/DataProds/ShinyApp")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?set.seed
?get.seed
?set.seed
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runGitHub("DataProdShinyApp","MikeWise2718")
shinyapps::setAccountInfo(
name="mikewise2718",
token="4C7DCF8C6C72B56B64FAA289F40CEDD8",
secret="bNz1D3ba22toZappHmbbhpianhvKDZ/HLo5jlIyS")
libray(shiny)
library(shiny)
shinyapps::setAccountInfo(
name="mikewise2718",
token="4C7DCF8C6C72B56B64FAA289F40CEDD8",
secret="bNz1D3ba22toZappHmbbhpianhvKDZ/HLo5jlIyS")
library(shinyapps)
install.packages("shinyapps")
shinyapps::setAccountInfo(
name="mikewise2718",
token="4C7DCF8C6C72B56B64FAA289F40CEDD8",
secret="bNz1D3ba22toZappHmbbhpianhvKDZ/HLo5jlIyS")
library(shinyapps)
library(shinyapps)
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(
name="mikewise2718",
token="4C7DCF8C6C72B56B64FAA289F40CEDD8",
secret="bNz1D3ba22toZappHmbbhpianhvKDZ/HLo5jlIyS")
setwd("C:/DataCert/DataProds/ShinyApp")
runApp()
deplyApp)()
deplyApp()
deployApp()
library(shinyapps)
deployApp()
runApp()
deployApp()
runApp()
runGitHub("DataProdShinyApp","MikeWise2718")
runApp()
runGitHub("DataProdShinyApp","MikeWise2718")
deplyApp()
deployApp()
runApp()
deployApp()
setwd("C:/DataCert/ML/Proj1")
answers1 =  c("B", "A", "B", "A", "A",   "E", "D", "A", "A", "A",   "B", "A", "B", "A", "E",   "E", "A", "B", "B", "B")
indexes1 =  c("1", "2", "3", "4", "5",   "6", "7", "8", "9", "10", "11","12","13","14","15",  "16","17","18","19","20")
answers =  c("B", "A", "B", "A", "A",   "E", "D", "B", "A", "A",   "B", "C", "B", "A", "E",   "E", "A", "B", "B", "B")
indexes =  c("1", "2", "3", "4", "5",   "6", "7", "8", "9", "10", "11","12","13","14","15",  "16","17","18","19","20")
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(answers)
setwd("C:/DataCert/ML/PmlProject")
browseURL('PmlProject.html')
knit2html('PmlProject.Rmd')
library(knitr)
knit2html('PmlProject.Rmd')
browseURL('PmlProject.html')
ver
version
